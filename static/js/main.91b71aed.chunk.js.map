{"version":3,"sources":["assets/images/rock.svg","assets/images/paper.svg","assets/images/scissors.svg","assets/images/lizard.svg","assets/images/spock.svg","components/Player.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Player","weapon","className","src","Rock","Paper","Scissors","Lizard","Spock","alt","weapons","App","state","playerOne","playerTwo","winner","startGame","counter","gameInterval","setInterval","setState","Math","floor","random","length","clearInterval","selectWinner","selectWeapon","this","map","item","onClick","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6OAAe,MAA0B,iCCA1B,MAA0B,kCCA1B,MAA0B,qCCA1B,MAA0B,mCCA1B,MAA0B,kCC6B1BA,EAlBA,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAH,OACb,mCACE,qBAAKC,UAAU,SAAf,SACE,qBACEA,UAAU,eACVC,IACa,SAAXF,EAAoBG,EACT,UAAXH,EAAqBI,EACV,aAAXJ,EAAwBK,EACb,WAAXL,EAAsBM,EACX,UAAXN,EAAqBO,EAAQ,GAE/BC,IAAI,0CCnBNC,G,MAAU,CAAC,OAAQ,QAAS,WAAY,SAAU,UA6FzCC,E,4MA1FbC,MAAQ,CACNC,UAAWH,EAAQ,GACnBI,UAAWJ,EAAQ,GACnBK,OAAQ,I,EAGVC,UAAY,WACV,IAAIC,EAAU,EACVC,EAAeC,aAAY,WAC7BF,IACA,EAAKG,SAAS,CACZN,UAAWJ,EAAQW,KAAKC,MAAMD,KAAKE,SAAWb,EAAQc,SACtDT,OAAQ,KAENE,EAAU,IACZQ,cAAcP,GACd,EAAKE,SAAS,CACZL,OAAQ,EAAKW,oBAGhB,M,EAGLA,aAAe,WAAO,IAAD,EACc,EAAKd,MAA9BC,EADW,EACXA,UAAWC,EADA,EACAA,UAEnB,OAAID,IAAcC,EAET,mBAGQ,SAAdD,GAAsC,aAAdC,GACV,SAAdD,GAAsC,WAAdC,GACV,UAAdD,GAAuC,SAAdC,GACX,UAAdD,GAAuC,UAAdC,GACX,aAAdD,GAA0C,UAAdC,GACd,aAAdD,GAA0C,WAAdC,GACd,WAAdD,GAAwC,UAAdC,GACZ,WAAdD,GAAwC,UAAdC,GACZ,UAAdD,GAAuC,SAAdC,GACX,UAAdD,GAAuC,aAAdC,EAEnB,sBAAMZ,UAAU,MAAhB,sBAEA,sBAAMA,UAAU,KAAhB,4B,EAIXyB,aAAe,SAAC1B,GACd,EAAKmB,SAAS,CACZP,UAAWZ,EACXc,OAAQ,M,uDAIF,IAAD,SAEkCa,KAAKhB,MAAtCC,EAFD,EAECA,UAAWC,EAFZ,EAEYA,UAAWC,EAFvB,EAEuBA,OAE9B,OACE,qCACE,qBAAKb,UAAU,iBAAf,SACE,qBAAKA,UAAU,SAAf,SACGa,EAASa,KAAKF,eAAiB,gBAGpC,sBAAKxB,UAAU,kBAAf,UACE,cAAC,EAAD,CAAQD,OAAQY,IAChB,cAAC,EAAD,CAAQZ,OAAQa,OAElB,qBAAKZ,UAAU,kBAAf,SACGQ,EAAQmB,KAAK,SAAAC,GACZ,OAAS,wBACT5B,UAAU,aACV6B,QAAS,kBAAM,EAAKJ,aAAaG,IAFxB,SAIRA,SAIL,qBAAK5B,UAAU,gBAAf,SACE,wBAAQA,UAAU,YAAY6B,QAASH,KAAKZ,UAA5C,6B,GAlFQgB,aCQHC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,MCFdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACI,cAAC,EAAD,MAEJC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.91b71aed.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/rock.9d5c9111.svg\";","export default __webpack_public_path__ + \"static/media/paper.3418783a.svg\";","export default __webpack_public_path__ + \"static/media/scissors.308ea6ee.svg\";","export default __webpack_public_path__ + \"static/media/lizard.09fd9bd4.svg\";","export default __webpack_public_path__ + \"static/media/spock.d882af0a.svg\";","import React from \"react\";\nimport Rock from \"../assets/images/rock.svg\";\nimport Paper from \"../assets/images/paper.svg\";\nimport Scissors from \"../assets/images/scissors.svg\";\nimport Lizard from \"../assets/images/lizard.svg\";\nimport Spock from \"../assets/images/spock.svg\";\n\ntype Weapon = {\n  weapon: string;\n}\n\nconst Player = ({ weapon }: Weapon) => (\n  <>\n    <div className=\"player\">\n      <img\n        className=\"player-image\"\n        src={\n          weapon === \"Rock\" ? Rock :\n          weapon === \"Paper\" ? Paper :  \n          weapon === \"Scissors\" ? Scissors :\n          weapon === \"Lizard\" ? Lizard :\n          weapon === \"Spock\" ? Spock : ''\n        }\n        alt=\"Rock Paper Scissors Lizard Spock\"\n      />\n    </div>\n  </>\n);\n\nexport default Player;\n","import React, { Component } from \"react\";\nimport Player from \"./components/Player\";\nimport \"./App.css\";\n\nconst weapons = [\"Rock\", \"Paper\", \"Scissors\", \"Lizard\", \"Spock\"]\n\nclass App extends Component {\n  state = {\n    playerOne: weapons[0],\n    playerTwo: weapons[0],\n    winner: ''\n  };\n\n  startGame = () => {\n    let counter = 0;\n    let gameInterval = setInterval(() => {\n      counter++;\n      this.setState({\n        playerTwo: weapons[Math.floor(Math.random() * weapons.length)],\n        winner: \"\"\n      });\n      if (counter > 5) {\n        clearInterval(gameInterval);\n        this.setState({\n          winner: this.selectWinner()\n        });\n      }\n    }, 100);\n  };\n\n  selectWinner = () => {\n    const { playerOne, playerTwo } = this.state;\n\n    if (playerOne === playerTwo) {\n\n      return \"Oops it's a Tie!\";\n      \n    } else if (\n      (playerOne === \"Rock\" && playerTwo === \"Scissors\") ||\n      (playerOne === \"Rock\" && playerTwo === \"Lizard\") ||\n      (playerOne === \"Paper\" && playerTwo === \"Rock\") ||\n      (playerOne === \"Paper\" && playerTwo === \"Spock\") ||\n      (playerOne === \"Scissors\" && playerTwo === \"Paper\") ||\n      (playerOne === \"Scissors\" && playerTwo === \"Lizard\") ||      \n      (playerOne === \"Lizard\" && playerTwo === \"Paper\") ||\n      (playerOne === \"Lizard\" && playerTwo === \"Spock\") ||\n      (playerOne === \"Spock\" && playerTwo === \"Rock\") ||\n      (playerOne === \"Spock\" && playerTwo === \"Scissors\")\n    ) {\n      return <span className=\"you\">You Won!</span>;\n    } else {\n      return <span className=\"pc\">Computer Won!</span>;\n    }\n  };\n\n  selectWeapon = (weapon: string) => {\n    this.setState({\n      playerOne: weapon,\n      winner: \"\"\n    });\n  };\n  \n  render() {\n\n    const { playerOne, playerTwo, winner } = this.state;\n\n    return (\n      <>        \n        <div className=\"winner-wrapper\">\n          <div className=\"winner\">\n            {winner ? this.selectWinner() : 'R P S L S'}\n          </div>\n        </div>     \n        <div className=\"players-wrapper\">\n          <Player weapon={playerOne} />\n          <Player weapon={playerTwo} />\n        </div>\n        <div className=\"weapons-wrapper\">\n          {weapons.map((item => {\n            return ( <button\n            className=\"weapon-btn\"\n            onClick={() => this.selectWeapon(item)}\n          >\n            {item}\n          </button> )\n          }))}          \n        </div>\n        <div className=\"start-wrapper\">\n          <button className=\"start-btn\" onClick={this.startGame}>\n            Start!\n          </button>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);  \n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'flexboxgrid';\n\nReactDOM.render(\n  <React.StrictMode>    \n      <App />    \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}